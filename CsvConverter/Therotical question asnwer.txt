1. How will you tackle the challenge above?


1) First, I read the CSV file and stored the data in a 2D array. Each cell could either be a number or a formula.

2) If the cell contains a formula (starts with =), I evaluate the formula. If it's just a number, I leave it as it is.

3) I found the cell references in the formula (like A1) and replaced them with their actual values. Then I used JavaScript's eval() method to do the calculation.

4) After all the formulas were evaluated, I saved the updated data back into a new CSV file.


2. What type of errors you would you check for?




1) If a formula tries to use a cell that doesn’t exist, I would check for that and handle the error.

2) If one formula depends on another formula in a loop, this could cause a problem (for example, A1 refers to B1, and B1 refers back to A1). This isn’t handled in the basic version.

3) If the formula has incorrect syntax or doesn’t make sense (like =A1 +), it would throw an error, so I would check for that.

4) If the CSV is empty or doesn’t have the right format, it could cause the program to fail.


3. How might a user break your code?



1) If the user creates formulas that refer to each other in a loop, it could cause the code to run forever or crash.

2) If the user enters a formula with unsupported operations or wrong syntax, it could throw errors.

3) If the user provides a very big file with lots of formulas and dependencies, it could slow down or crash due to memory or performance issues.

